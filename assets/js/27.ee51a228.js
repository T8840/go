(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{435:function(t,a,s){"use strict";s.r(a);var r=s(2),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"指针定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指针定义"}},[t._v("#")]),t._v(" 指针定义")]),t._v(" "),a("p",[t._v("一个指针变量指向了一个值的内存地址。\n在使用指针前你需要声明指针。指针声明格式如下：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var-type 为指针类型，var_name 为指针变量名，* 号用于指定变量是作为一个指针。以下是有效的指针声明:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var var_name *var-type ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ip "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 指向整型*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 指向浮点型 */")]),t._v("\n")])])]),a("h2",{attrs:{id:"指针的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指针的使用"}},[t._v("#")]),t._v(" 指针的使用")]),t._v(" "),a("p",[t._v("指针使用流程：")]),t._v(" "),a("ul",[a("li",[t._v("定义指针变量。")]),t._v(" "),a("li",[t._v("为指针变量赋值。")]),t._v(" "),a("li",[t._v("访问指针变量中指向地址的值。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);