(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{427:function(o,t,n){"use strict";n.r(t);var l=n(2),e=Object(l.a)({},(function(){var o=this,t=o._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("h3",{attrs:{id:"生产可执行程序为目的的go项目结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产可执行程序为目的的go项目结构"}},[o._v("#")]),o._v(" 生产可执行程序为目的的Go项目结构")]),o._v(" "),t("p",[o._v("对于以生产可执行程序为目的的 Go 项目，它的典型项目结构分为五部分：")]),o._v(" "),t("ul",[t("li",[o._v("放在项目顶层的 Go Module 相关文件，包括 go.mod 和 go.sum；")]),o._v(" "),t("li",[o._v("cmd 目录：存放项目要编译构建的可执行文件所对应的 main 包的源码文件；")]),o._v(" "),t("li",[o._v("项目包目录：每个项目下的非 main 包都“平铺”在项目的根目录下，每个目录对应一个 Go 包；")]),o._v(" "),t("li",[o._v("internal 目录：存放仅项目内部引用的 Go 包，这些包无法被项目之外引用；")]),o._v(" "),t("li",[o._v("vendor 目录：这是一个可选目录，为了兼容 Go 1.5 引入的 vendor 构建模式而存在的。这个目录下的内容均由 Go 命令自动维护，不需要开发者手工干预。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);